{"ast":null,"code":"var _jsxFileName = \"/Users/smadugula/Flashcard-app-capstone/src/components/DeckForm.js\",\n  _s = $RefreshSig$();\nimport Navigation from \"./Navigation\";\nimport { Link, useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { createDeck, updateDeck } from \"../utils/api\";\nimport { getDeck } from \"../Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeckForm({\n  setDecksList\n}) {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  let [deckObject, setDeckObject] = useState({\n    name: '',\n    description: ''\n  });\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    if (location.pathname !== \"/decks/new\") {\n      getDeck(setDeckObject, deckId);\n    }\n  }, [deckId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      children: location.pathname === \"/decks/new\" ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Create Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: deckObject.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), location.pathname === \"/decks/new\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 74\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        const abortController = new AbortController();\n        if (location.pathname === \"/decks/new\") {\n          createDeck(deckObject, abortController.signal).then(r => {\n            setDecksList(oldList => [...oldList, {\n              ...r,\n              cards: []\n            }]);\n            setDeckObject({\n              name: '',\n              description: ''\n            });\n            history.push(`/decks/${r.id}`);\n          });\n        } else {\n          updateDeck({\n            id: deckId,\n            ...deckObject\n          }, abortController.signal).then(r => history.push(`/decks/${deckId}`));\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        size: 100,\n        id: \"name\",\n        onChange: event => {\n          setDeckObject({\n            ...deckObject,\n            name: event.target.value\n          });\n        },\n        name: \"name\",\n        value: deckObject.name,\n        placeholder: \"Deck Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: 100,\n        onChange: event => {\n          setDeckObject({\n            ...deckObject,\n            description: event.target.value\n          });\n        },\n        rows: 4,\n        id: \"description\",\n        value: deckObject.description,\n        name: \"description\",\n        placeholder: \"Brief description of the deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(\"/\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(DeckForm, \"pT1xB9sWuE0ESX1u7FJUcX3jv+4=\", false, function () {\n  return [useHistory, useLocation, useParams];\n});\n_c = DeckForm;\nexport default DeckForm;\nvar _c;\n$RefreshReg$(_c, \"DeckForm\");","map":{"version":3,"names":["Navigation","Link","useHistory","useLocation","useParams","useEffect","useState","createDeck","updateDeck","getDeck","jsxDEV","_jsxDEV","DeckForm","setDecksList","_s","history","location","deckObject","setDeckObject","name","description","deckId","pathname","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","event","preventDefault","abortController","AbortController","signal","then","r","oldList","cards","push","id","htmlFor","size","onChange","target","value","placeholder","cols","rows","onClick","type","_c","$RefreshReg$"],"sources":["/Users/smadugula/Flashcard-app-capstone/src/components/DeckForm.js"],"sourcesContent":["import Navigation from \"./Navigation\";\nimport {Link, useHistory, useLocation, useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport {createDeck, updateDeck} from \"../utils/api\";\nimport {getDeck} from \"../Layout\";\n\nfunction DeckForm({setDecksList}) {\n    const history = useHistory()\n    const location = useLocation();\n    let [deckObject, setDeckObject] = useState({\n        name: '',\n        description: ''\n    });\n    const {deckId} = useParams();\n\n    useEffect(() => {\n        if (location.pathname !== \"/decks/new\") {\n            getDeck(setDeckObject, deckId)\n        }\n    }, [deckId])\n\n    return (\n        <div>\n            <Navigation>\n                {location.pathname === \"/decks/new\"\n                    ? <li>Create Deck</li>\n                    : <div>\n                        <li><Link to={`/decks/${deckId}`}>{deckObject.name}</Link></li>\n                        <li>/</li>\n                        <li>Study</li>\n                    </div>}\n            </Navigation>\n            {location.pathname === \"/decks/new\" ? <h1>Create Deck</h1> : <h1>Edit Deck</h1>}\n            <form onSubmit={(event) => {\n                event.preventDefault()\n                const abortController = new AbortController();\n                if (location.pathname === \"/decks/new\") {\n                    createDeck(deckObject, abortController.signal).then(r => {\n                        setDecksList((oldList) => [...oldList, {...r, cards: []}])\n                        setDeckObject({name: '', description: ''})\n                        history.push(`/decks/${r.id}`)\n                    })\n                } else {\n                    updateDeck({id: deckId, ...deckObject}, abortController.signal).then(r => history.push(`/decks/${deckId}`))\n                }\n            }}>\n                <label htmlFor=\"name\">Name</label>\n                <br/>\n                <input size={100} id=\"name\" onChange={(event) => {\n                    setDeckObject({...deckObject, name: event.target.value})\n                }} name=\"name\" value={deckObject.name} placeholder=\"Deck Name\" />\n                <br/>\n                <br/>\n                <label htmlFor=\"description\">Description</label>\n                <br/>\n                <textarea cols={100} onChange={(event) => {\n                    setDeckObject({...deckObject, description: event.target.value})\n                }}  rows={4} id=\"description\" value={deckObject.description} name=\"description\" placeholder=\"Brief description of the deck\" />\n                <br/>\n                <br/>\n                <button onClick={() => history.push(\"/\")}>Cancel</button>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default DeckForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}