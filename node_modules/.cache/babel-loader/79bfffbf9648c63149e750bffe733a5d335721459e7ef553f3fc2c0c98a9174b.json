{"ast":null,"code":"var _jsxFileName = \"/Users/smadugula/Flashcard-app-capstone/src/Layout/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport Decks from \"../components/Decks\";\nimport DeckList from \"../components/DeckList\";\nimport { listDecks, readDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function getDeck(setDeck, deckId) {\n  const abortController = new AbortController();\n  async function getDeck() {\n    const response = await readDeck(deckId, abortController.signal);\n    setDeck(response);\n  }\n  getDeck();\n}\nfunction Layout() {\n  _s();\n  const history = useHistory();\n  const [decksList, setDecksList] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(r => setDecksList(r));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary w3-panel w3-padding-16\",\n            onClick: () => {\n              history.push(\"/decks/new\");\n            },\n            children: \"Create Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(DeckList, {\n            decksList: decksList,\n            setDecksList: setDecksList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks\",\n          children: /*#__PURE__*/_jsxDEV(Decks, {\n            setDecksList: setDecksList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Layout, \"PSMJws+7sD9rPGJMORre1JmfXsk=\", false, function () {\n  return [useHistory];\n});\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useEffect","useState","Header","Route","Switch","useHistory","NotFound","Decks","DeckList","listDecks","readDeck","jsxDEV","_jsxDEV","Fragment","_Fragment","getDeck","setDeck","deckId","abortController","AbortController","response","signal","Layout","_s","history","decksList","setDecksList","then","r","children","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","onClick","push","_c","$RefreshReg$"],"sources":["/Users/smadugula/Flashcard-app-capstone/src/Layout/index.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Header from \"./Header\";\nimport {Route, Switch, useHistory} from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport Decks from \"../components/Decks\";\nimport DeckList from \"../components/DeckList\";\nimport {listDecks, readDeck} from \"../utils/api\";\n\n\nexport function getDeck(setDeck, deckId) {\n    const abortController = new AbortController();\n    async function getDeck() {\n        const response = await readDeck(deckId, abortController.signal)\n        setDeck(response)\n    }\n    getDeck();\n}\n\nfunction Layout() {\n    const history = useHistory();\n    const [decksList, setDecksList] = useState([]);\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        listDecks(abortController.signal).then(r => setDecksList(r))\n    }, [])\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n          <Switch>\n              <Route exact path=\"/\">\n                  <button className=\"btn btn-primary w3-panel w3-padding-16\" onClick={() => {\n                      history.push(\"/decks/new\")\n                  }}>Create Deck</button>\n                  <DeckList decksList={decksList} setDecksList={setDecksList} />\n                  <br></br>\n              </Route> \n              <Route path=\"/decks\">\n                  <Decks setDecksList={setDecksList} />\n              </Route>\n              <Route>\n                  <NotFound />\n              </Route>\n          </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}